//- Escriba una función lower, la cual convierte letras mayusculas a minusculas usando una condicional. No usar if-else.

#include <stdio.h>

int convert(int c);

int main()
{

    int min, letra;

    printf("Ingrese una Letra MAYUSCULA :\n");
    letra=getchar();
    min = convert(letra);
    printf("El resultado de la funcion es: %c", min);
    return 0;
}

int convert(int c)
{
	return (c>='A' && c<='Z') ? c + 'a'-'A': c;

}

//- Escriba una función strindex(s, t), la cual retorne la posición de la ocurrencia mas a la derecha de t en s. Retorne -1 si no la encuentra. 
//#include <conio.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int stridex(char s[],char t)
{
    int posicion,i,tam;
    posicion=-1;
    tam=strlen(s);
    for(i=0;i<tam;i++)
    {
        if (s[i]==t)
            posicion = i;
    }
    printf("la posicion de t es: %d",posicion);
  
}

int main()
{
    char s[25]={"introduceaquituarreglo"};
    char t;
    printf("Introduce un caracter a buscar: ");
    t=getchar();
    printf("%c",stridex(s,t));
}

//- Escriba un programa que reciba un string de la forma "123.45e-6" y devuelva su correspondiete número.
/**  3 **/
/*
int power(int base,int exp)
{
    int power;
    power=1;
    while(exp-- > 0)
        power *=base;

    return power;
}


double myatof(char s[])
{
    double val,pow;
    int sign,i,esign,exp;
    int power(int base,int exp);

    for(i=0;isspace(s[i]);i++)
        ;

    sign=(s[i]=='-')?-1:1;

    if(s[i]=='+' || s[i] == '-')
        i++;

    for(val=0.0;isdigit(s[i]);i++)
        val = 10.0 * val + (s[i] - '0');

    if(s[i]=='.')
        i++;

    for(pow=1.0;isdigit(s[i]);i++)
    {
        val = 10.0 * val + (s[i] - '0');
        pow *= 10.0;
    }

    if(s[i]=='e' || s[i] =='E')
        i++;
    if(s[i]=='+' || s[i] =='-')
    {
        esign=s[i];
        i++;
    }

    for(exp=0;isdigit(s[i]);i++)
        exp=10.0 * exp + (s[i] - '0');

    if( esign == '-')
        return sign * (val / pow) / power(10,exp);
    else

        return sign * (val / pow) * power(10,exp);
}
*/

//reciba un string de la forma "123456e-6"   * 10 a las menos 6 es 1/10 a la 6
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#define MAXLINE 100

double atof_ext(char s[]);
int get_line(char line[], int max);

int main()
{
    int len;
    double resul;
    char cadena[MAXLINE];

    while((len = get_line(cadena, MAXLINE)) > 0){
        resul = atof_ext(cadena);
        printf("%g\n", resul);
    }
    return 0;
}

double atof_ext(char s[]){
    double val, power, res, power_e;
    int i, sign, sign_e, h, exp_e;

    for(i = 0; isspace(s[i]); i++)          /* Verifica si es un espacio */
        ;
    sign = (s[i] == '-') ? -1 : 1;          /* Define el signo */
    if(s[i] == '+' || s[i] == '-')          /* esta explicitamente el signo?*/
        i++;
    for(val = 0.0; isdigit(s[i]); i++)      /* Detecta los digitos de la parte entera*/
        val = 10.0 * val + (s[i] - '0');
    if(s[i] == '.')
        i++;
    for(power = 1.0; isdigit(s[i]); i++){
        val = 10.0 * val + (s[i] - '0');    /* Contador que inicia a partir del punto,*/
        power *= 10.0;                      /* establece cuales son los decimales.*/
    }
    if(s[i] == 'e' || s[i] == 'E'){
        i++;
    }
    sign_e = (s[i] == '-') ? -1 : 1;
    if(s[i] == '+' || s[i] == '-')
        i++;
    for(exp_e = 0.0; isdigit(s[i]); i++)     /* Almacena el valor del exponente de "e" en exp_e*/
        exp_e = 10.0 * exp_e + (s[i] - '0');
    for(h = 0, power_e = 1; h < exp_e; h++)    /* La cantidad por la cual se divide o multiplica el resultado final */
        power_e *= 10;
    if(sign_e == 1)
        return sign * val * power_e / power;
    else
        return sign * val / (power * power_e);
}

int get_line(char s[], int lim)
{
    int c, i;

    i = 0;
    while(--lim > 0 && (c = getchar()) != EOF && c!= '\n')
        s[i++] = c;
    if (c == '\n')
        s[i++] = c;
    s[i] = '\0';
    return i;
}


//- Escriba una función recursiva que reciba un string y devuelva el string invertido (sin utilizar la libreria string.h).
/*
#include <stdio.h>
#include <stdlib.h>

void reverse (char*);

int main(){

   char cadena [80];

   printf ("Entre una cadena\n");
   gets(cadena);
   printf ("La cadena invertida es\n");
   reverse (cadena);
   printf ("\n");
   return 0;
}

void reverse (char* s){
   if (s[0]=='\0')
      return;
   else{
      reverse (&s[1]);
      putchar (s[0]);
   }
}

*/

#include <stdio.h>
#include <stdlib.h>

void invertir(char s[])
{
    int i,j,cont;
    char temp[20];
    for(i=0;i<20;i++)
        temp[19-i]=s[i];
    for(i=0;i<20;i++)
        s[i]=temp[i];
    for (j=0;j<20;j++)
        printf("%c",s[j]);
}

int main(){

   char cadena [20]={"ingresesucadena"};
   printf ("La cadena invertida es\n");
   invertir(cadena);
   printf ("\n");
   return 0;
}
